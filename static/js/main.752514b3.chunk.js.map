{"version":3,"sources":["hooks/useTicker.ts","components/AnalogClock/AnalogClock.tsx","components/Clock/Clock.tsx","components/Dropdown/Dropdown.tsx","constants/timezones.ts","components/App/App.tsx","utils/serviceWorker.ts","index.tsx"],"names":["useTicker","timezone","useState","moment","date","setDate","useEffect","ticker","setInterval","tick","clearInterval","tz","value","AnalogClock","className","style","seconds","minutes","hours","viewBox","cx","cy","r","x1","y1","x2","y2","Clock","format","Dropdown","items","initialValue","handleSelected","open","toggleOpen","selected","setSelected","element","document","getElementById","scrollIntoView","behavior","onClick","label","icon","faAngleUp","faAngleDown","map","item","key","id","handleClick","faCheck","timezones","setTimezone","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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E+B,MAAO,0BACP/B,MAAO,mBAET,CACE+B,MAAO,+BACP/B,MAAO,wBAET,CACE+B,MAAO,6BACP/B,MAAO,sBAET,CACE+B,MAAO,eACP/B,MAAO,uBAET,CACE+B,MAAO,yBACP/B,MAAO,mBAET,CACE+B,MAAO,2BACP/B,MAAO,qBAET,CACE+B,MAAO,4BACP/B,MAAO,sBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,QACP/B,MAAO,iBAET,CACE+B,MAAO,wBACP/B,MAAO,kBAET,CACE+B,MAAO,6BACP/B,MAAO,uBAET,CACE+B,MAAO,aACP/B,MAAO,sBAET,CACE+B,MAAO,gBACP/B,MAAO,kBAET,CACE+B,MAAO,cACP/B,MAAO,uBAET,CACE+B,MAAO,YACP/B,MAAO,qBAET,CACE+B,MAAO,YACP/B,MAAO,qBAET,CACE+B,MAAO,UACP/B,MAAO,mBAET,CACE+B,MAAO,gBACP/B,MAAO,kBAET,CACE+B,MAAO,sCACP/B,MAAO,oBAET,CACE+B,MAAO,2BACP/B,MAAO,oBAET,CACE+B,MAAO,8BACP/B,MAAO,uBAET,CACE+B,MAAO,iBACP/B,MAAO,kBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,eACP/B,MAAO,mBAET,CACE+B,MAAO,6BACP/B,MAAO,uBAET,CACE+B,MAAO,0BACP/B,MAAO,oBAET,CACE+B,MAAO,YACP/B,MAAO,qBAET,CACE+B,MAAO,UACP/B,MAAO,mBAET,CACE+B,MAAO,OACP/B,MAAO,gBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,aACP/B,MAAO,sBAET,CACE+B,MAAO,WACP/B,MAAO,oBAET,CACE+B,MAAO,WACP/B,MAAO,oBAET,CACE+B,MAAO,YACP/B,MAAO,qBAET,CACE+B,MAAO,eACP/B,MAAO,wBAET,CACE+B,MAAO,UACP/B,MAAO,mBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,UACP/B,MAAO,mBAET,CACE+B,MAAO,UACP/B,MAAO,mBAET,CACE+B,MAAO,eACP/B,MAAO,oBAET,CACE+B,MAAO,yBACP/B,MAAO,mBAET,CACE+B,MAAO,yBACP/B,MAAO,mBAET,CACE+B,MAAO,aACP/B,MAAO,sBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,aACP/B,MAAO,sBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,gBACP/B,MAAO,yBAET,CACE+B,MAAO,iBACP/B,MAAO,0BAET,CACE+B,MAAO,cACP/B,MAAO,uBAET,CACE+B,MAAO,cACP/B,MAAO,uBAET,CACE+B,MAAO,WACP/B,MAAO,oBAET,CACE+B,MAAO,gBACP/B,MAAO,yBAET,CACE+B,MAAO,YACP/B,MAAO,qBAET,CACE+B,MAAO,0BACP/B,MAAO,mBAET,CACE+B,MAAO,QACP/B,MAAO,iBAET,CACE+B,MAAO,UACP/B,MAAO,oBAET,CACE+B,MAAO,eACP/B,MAAO,kCAET,CACE+B,MAAO,UACP/B,MAAO,mBAET,CACE+B,MAAO,UACP/B,MAAO,6BAET,CACE+B,MAAO,YACP/B,MAAO,qBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,aACP/B,MAAO,sBAET,CACE+B,MAAO,SACP/B,MAAO,qBAET,CACE+B,MAAO,aACP/B,MAAO,sBAET,CACE+B,MAAO,eACP/B,MAAO,wBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,UACP/B,MAAO,sBAET,CACE+B,MAAO,WACP/B,MAAO,iBAET,CACE+B,MAAO,YACP/B,MAAO,qBAET,CACE+B,MAAO,UACP/B,MAAO,oBAET,CACE+B,MAAO,QACP/B,MAAO,iBAET,CACE+B,MAAO,gCACP/B,MAAO,oBAET,CACE+B,MAAO,UACP/B,MAAO,mBAET,CACE+B,MAAO,WACP/B,MAAO,oBAET,CACE+B,MAAO,UACP/B,MAAO,mBAET,CACE+B,MAAO,gBACP/B,MAAO,0BAET,CACE+B,MAAO,aACP/B,MAAO,uBAET,CACE+B,MAAO,UACP/B,MAAO,kBAET,CACE+B,MAAO,QACP/B,MAAO,gBAET,CACE+B,MAAO,SACP/B,MAAO,mBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,aACP/B,MAAO,qBAET,CACE+B,MAAO,eACP/B,MAAO,wBAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,MACP/B,MAAO,WAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,YACP/B,MAAO,sBAET,CACE+B,MAAO,eACP/B,MAAO,wBAET,CACE+B,MAAO,MACP/B,MAAO,OAET,CACE+B,MAAO,UACP/B,MAAO,kBAET,CACE+B,MAAO,iBACP/B,MAAO,mBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,QACP/B,MAAO,gBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,QACP/B,MAAO,gBAET,CACE+B,MAAO,YACP/B,MAAO,oBAET,CACE+B,MAAO,UACP/B,MAAO,kBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,QACP/B,MAAO,gBAET,CACE+B,MAAO,mCACP/B,MAAO,mBAET,CACE+B,MAAO,iCACP/B,MAAO,iBAET,CACE+B,MAAO,QACP/B,MAAO,gBAET,CACE+B,MAAO,aACP/B,MAAO,qBAET,CACE+B,MAAO,YACP/B,MAAO,oBAET,CACE+B,MAAO,eACP/B,MAAO,uBAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,aACP/B,MAAO,qBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,QACP/B,MAAO,gBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,0BACP/B,MAAO,sBAET,CACE+B,MAAO,OACP/B,MAAO,eAET,CACE+B,MAAO,QACP/B,MAAO,gBAET,CACE+B,MAAO,OACP/B,MAAO,eAET,CACE+B,MAAO,YACP/B,MAAO,oBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,UACP/B,MAAO,kBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,QACP/B,MAAO,cAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,UACP/B,MAAO,gBAET,CACE+B,MAAO,SACP/B,MAAO,eAET,CACE+B,MAAO,YACP/B,MAAO,oBAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,WACP/B,MAAO,iBAET,CACE+B,MAAO,OACP/B,MAAO,aAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,YACP/B,MAAO,kBAET,CACE+B,MAAO,OACP/B,MAAO,eAET,CACE+B,MAAO,QACP/B,MAAO,gBAET,CACE+B,MAAO,qBACP/B,MAAO,iBAET,CACE+B,MAAO,UACP/B,MAAO,kBAET,CACE+B,MAAO,UACP/B,MAAO,gBAET,CACE+B,MAAO,QACP/B,MAAO,cAET,CACE+B,MAAO,OACP/B,MAAO,eAET,CACE+B,MAAO,SACP/B,MAAO,eAET,CACE+B,MAAO,QACP/B,MAAO,gBAET,CACE+B,MAAO,QACP/B,MAAO,oBAET,CACE+B,MAAO,UACP/B,MAAO,kBAET,CACE+B,MAAO,UACP/B,MAAO,kBAET,CACE+B,MAAO,OACP/B,MAAO,aAET,CACE+B,MAAO,QACP/B,MAAO,cAET,CACE+B,MAAO,OACP/B,MAAO,eAET,CACE+B,MAAO,YACP/B,MAAO,oBAET,CACE+B,MAAO,qBACP/B,MAAO,iBAET,CACE+B,MAAO,UACP/B,MAAO,kBAET,CACE+B,MAAO,UACP/B,MAAO,gBAET,CACE+B,MAAO,UACP/B,MAAO,gBAET,CACE+B,MAAO,QACP/B,MAAO,cAET,CACE+B,MAAO,SACP/B,MAAO,eAET,CACE+B,MAAO,QACP/B,MAAO,cAET,CACE+B,MAAO,SACP/B,MAAO,eAET,CACE+B,MAAO,WACP/B,MAAO,iBAET,CACE+B,MAAO,WACP/B,MAAO,iBAET,CACE+B,MAAO,UACP/B,MAAO,gBAET,CACE+B,MAAO,YACP/B,MAAO,oBAET,CACE+B,MAAO,WACP/B,MAAO,mBAET,CACE+B,MAAO,SACP/B,MAAO,qBAET,CACE+B,MAAO,4BACP/B,MAAO,sBAET,CACE+B,MAAO,WACP/B,MAAO,iBAET,CACE+B,MAAO,UACP/B,MAAO,gBAET,CACE+B,MAAO,sBACP/B,MAAO,iBAET,CACE+B,MAAO,WACP/B,MAAO,iBAET,CACE+B,MAAO,SACP/B,MAAO,eAET,CACE+B,MAAO,UACP/B,MAAO,gBAET,CACE+B,MAAO,SACP/B,MAAO,iBAET,CACE+B,MAAO,QACP/B,MAAO,cAET,CACE+B,MAAO,mBACP/B,MAAO,aAET,CACE+B,MAAO,UACP/B,MAAO,gBAET,CACE+B,MAAO,SACP/B,MAAO,qBAET,CACE+B,MAAO,QACP/B,MAAO,gBAET,CACE+B,MAAO,UACP/B,MAAO,eAET,CACE+B,MAAO,UACP/B,MAAO,gBAET,CACE+B,MAAO,YACP/B,MAAO,oBAET,CACE+B,MAAO,QACP/B,MAAO,oBAET,CACE+B,MAAO,QACP/B,MAAO,eAET,CACE+B,MAAO,OACP/B,MAAO,aAET,CACE+B,MAAO,UACP/B,MAAO,gBAET,CACE+B,MAAO,0BACP/B,MAAO,oBAET,CACE+B,MAAO,SACP/B,MAAO,eAET,CACE+B,MAAO,QACP/B,MAAO,oBAET,CACE+B,MAAO,uBACP/B,MAAO,iBAET,CACE+B,MAAO,aACP/B,MAAO,mBAET,CACE+B,MAAO,YACP/B,MAAO,kBAET,CACE+B,MAAO,eACP/B,MAAO,qBAET,CACE+B,MAAO,QACP/B,MAAO,cAET,CACE+B,MAAO,WACP/B,MAAO,iBAET,CACE+B,MAAO,SACP/B,MAAO,eAET,CACE+B,MAAO,sBACP/B,MAAO,gBAET,CACE+B,MAAO,YACP/B,MAAO,kBAET,CACE+B,MAAO,SACP/B,MAAO,eAET,CACE+B,MAAO,cACP/B,MAAO,oBAET,CACE+B,MAAO,uBACP/B,MAAO,mBAET,CACE+B,MAAO,OACP/B,MAAO,aAET,CACE+B,MAAO,WACP/B,MAAO,iBAET,CACE+B,MAAO,sBACP/B,MAAO,gBAET,CACE+B,MAAO,QACP/B,MAAO,iBAET,CACE+B,MAAO,YACP/B,MAAO,kBAET,CACE+B,MAAO,QACP/B,MAAO,cAET,CACE+B,MAAO,QACP/B,MAAO,cAET,CACE+B,MAAO,0BACP/B,MAAO,sBAET,CACE+B,MAAO,wBACP/B,MAAO,oBAET,CACE+B,MAAO,mBACP/B,MAAO,6BAET,CACE+B,MAAO,0BACP/B,MAAO,sBAET,CACE+B,MAAO,wBACP/B,MAAO,oBAET,CACE+B,MAAO,2BACP/B,MAAO,uBAET,CACE+B,MAAO,mCACP/B,MAAO,oBAET,CACE+B,MAAO,OACP/B,MAAO,gBAET,CACE+B,MAAO,0BACP/B,MAAO,oBAET,CACE+B,MAAO,eACP/B,MAAO,wBAET,CACE+B,MAAO,OACP/B,MAAO,iBAET,CACE+B,MAAO,QACP/B,MAAO,iBAET,CACE+B,MAAO,cACP/B,MAAO,uBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,sBACP/B,MAAO,gBAET,CACE+B,MAAO,UACP/B,MAAO,mBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,SACP/B,MAAO,mBAET,CACE+B,MAAO,WACP/B,MAAO,oBAET,CACE+B,MAAO,OACP/B,MAAO,gBAET,CACE+B,MAAO,WACP/B,MAAO,oBAET,CACE+B,MAAO,YACP/B,MAAO,qBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,wCACP/B,MAAO,kBAET,CACE+B,MAAO,QACP/B,MAAO,iBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,OACP/B,MAAO,gBAET,CACE+B,MAAO,SACP/B,MAAO,kBAET,CACE+B,MAAO,OACP/B,MAAO,gBAET,CACE+B,MAAO,YACP/B,MAAO,qBAET,CACE+B,MAAO,UACP/B,MAAO,mBAET,CACE+B,MAAO,YACP/B,MAAO,qBAET,CACE+B,MAAO,aACP/B,MAAO,uBCz/BI,G,MAAA,KAAO,IAAD,EACaV,mBAAS,CACvCyC,MAAO,SACP/B,MAAO,kBAHU,mBACZX,EADY,KACFqD,EADE,KAMnB,OACE,yBAAKxC,UAAU,OACb,kBAAC,EAAD,CAAOb,SAAUA,IACjB,kBAAC,EAAD,CAAaA,SAAUA,IACvB,kBAAC,EAAD,CACE6B,MAAOuB,EACPtB,aAAc9B,EACd+B,eAAgBsB,OCXJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASvB,SAASC,eAAe,SDkI3C,kBAAmBuB,WACrBA,UAAUC,cAAcC,MACrBC,KAAMC,IACLA,EAAaC,eAEdC,MAAOC,IACNC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.752514b3.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport moment from \"moment-timezone\";\n\nconst useTicker = (timezone: TimeZone) => {\n  const [date, setDate] = useState(moment());\n\n  useEffect(() => {\n    let ticker = setInterval(() => tick(), 1000);\n    return () => clearInterval(ticker);\n  });\n\n  const tick = () => {\n    setDate(moment().tz(timezone.value));\n  };\n\n  return date;\n};\n\nexport default useTicker;\n","import React, { CSSProperties, FC } from \"react\";\nimport { useTicker } from \"../../hooks\";\n\nimport \"./AnalogClock.css\";\n\nconst AnalogClock: FC<Props> = ({ timezone }) => {\n  const date = useTicker(timezone);\n\n  const getTimeStyles = () => {\n    return {\n      \"--current-seconds\": date.seconds(),\n      \"--current-minutes\": date.minutes(),\n      \"--current-hours\": date.hours() % 12,\n    } as CSSProperties;\n  };\n\n  return (\n    <svg className=\"analogClock\" style={getTimeStyles()} viewBox=\"0 0 40 40\">\n      <circle className=\"analogClockFace\" cx=\"20\" cy=\"20\" r=\"19\" />\n      <g className=\"marks\">\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n        <line x1=\"15\" y1=\"0\" x2=\"16\" y2=\"0\" />\n      </g>\n      <line x1=\"0\" y1=\"0\" x2=\"9\" y2=\"0\" className=\"hour\" />\n      <line x1=\"0\" y1=\"0\" x2=\"13\" y2=\"0\" className=\"minute\" />\n      <line x1=\"0\" y1=\"0\" x2=\"16\" y2=\"0\" className=\"seconds\" />\n      <circle cx=\"20\" cy=\"20\" r=\"0.7\" className=\"pin\" />\n    </svg>\n  );\n};\n\ninterface Props {\n  timezone: TimeZone;\n}\n\nexport default AnalogClock;\n","import React, { FC } from \"react\";\nimport { useTicker } from \"../../hooks\";\n\nimport \"./Clock.css\";\n\nconst Clock: FC<Props> = ({ timezone }) => {\n  const date = useTicker(timezone);\n\n  return <div className=\"clock\">{date.format(\"LTS\")}</div>;\n};\n\ninterface Props {\n  timezone: TimeZone;\n}\n\nexport default Clock;\n","import React, { useState, useEffect, FC } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleUp,\n  faAngleDown,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./Dropdown.css\";\n\nconst Dropdown: FC<Props> = ({ items, initialValue, handleSelected }) => {\n  const [open, toggleOpen] = useState(false);\n  const [selected, setSelected] = useState(initialValue);\n\n  const handleClick = (item: DropDownItem) => {\n    setSelected(item);\n    toggleOpen(!open);\n    handleSelected(item);\n  };\n\n  useEffect(() => {\n    if (open) {\n      const element = document.getElementById(selected.value);\n      element?.scrollIntoView({ behavior: \"auto\" });\n    }\n  });\n\n  return (\n    <div className=\"dd-container\">\n      <div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => toggleOpen(!open)}>\n          <div className=\"dd-header-title\">{selected.label}</div>\n          <div className=\"dd-header-icon\">\n            {open ? (\n              <FontAwesomeIcon icon={faAngleUp} />\n            ) : (\n              <FontAwesomeIcon icon={faAngleDown} />\n            )}\n          </div>\n        </div>\n        {open && (\n          <ul className=\"dd-list\">\n            {items.map((item) => (\n              <div\n                className=\"dd-list-item\"\n                key={item.value}\n                id={item.value}\n                onClick={() => handleClick(item)}\n              >\n                {item.label}{\" \"}\n                {item.value === selected.value ? (\n                  <FontAwesomeIcon icon={faCheck} />\n                ) : null}\n              </div>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\ninterface Props {\n  items: DropDownItem[];\n  initialValue: DropDownItem;\n  handleSelected: (item: DropDownItem) => void;\n}\n\nexport default Dropdown;\n","export const timezones: TimeZone[] = [\n  {\n    label: \"Niue\",\n    value: \"Pacific/Niue\",\n  },\n  {\n    label: \"Pago Pago\",\n    value: \"Pacific/Pago_Pago\",\n  },\n  {\n    label: \"Hawaii Time\",\n    value: \"Pacific/Honolulu\",\n  },\n  {\n    label: \"Rarotonga\",\n    value: \"Pacific/Rarotonga\",\n  },\n  {\n    label: \"Tahiti\",\n    value: \"Pacific/Tahiti\",\n  },\n  {\n    label: \"Marquesas\",\n    value: \"Pacific/Marquesas\",\n  },\n  {\n    label: \"Gambier\",\n    value: \"Pacific/Gambier\",\n  },\n  {\n    label: \"Alaska Time\",\n    value: \"America/Anchorage\",\n  },\n  {\n    label: \"Pitcairn\",\n    value: \"Pacific/Pitcairn\",\n  },\n  {\n    label: \"Dawson\",\n    value: \"America/Dawson\",\n  },\n  {\n    label: \"Mountain Time - Arizona\",\n    value: \"America/Phoenix\",\n  },\n  {\n    label: \"Mountain Time - Dawson Creek\",\n    value: \"America/Dawson_Creek\",\n  },\n  {\n    label: \"Mountain Time - Hermosillo\",\n    value: \"America/Hermosillo\",\n  },\n  {\n    label: \"Pacific Time\",\n    value: \"America/Los_Angeles\",\n  },\n  {\n    label: \"Pacific Time - Tijuana\",\n    value: \"America/Tijuana\",\n  },\n  {\n    label: \"Pacific Time - Vancouver\",\n    value: \"America/Vancouver\",\n  },\n  {\n    label: \"Pacific Time - Whitehorse\",\n    value: \"America/Whitehorse\",\n  },\n  {\n    label: \"Belize\",\n    value: \"America/Belize\",\n  },\n  {\n    label: \"Boise\",\n    value: \"America/Boise\",\n  },\n  {\n    label: \"Central Time - Regina\",\n    value: \"America/Regina\",\n  },\n  {\n    label: \"Central Time - Tegucigalpa\",\n    value: \"America/Tegucigalpa\",\n  },\n  {\n    label: \"Costa Rica\",\n    value: \"America/Costa_Rica\",\n  },\n  {\n    label: \"Easter Island\",\n    value: \"Pacific/Easter\",\n  },\n  {\n    label: \"El Salvador\",\n    value: \"America/El_Salvador\",\n  },\n  {\n    label: \"Galapagos\",\n    value: \"Pacific/Galapagos\",\n  },\n  {\n    label: \"Guatemala\",\n    value: \"America/Guatemala\",\n  },\n  {\n    label: \"Managua\",\n    value: \"America/Managua\",\n  },\n  {\n    label: \"Mountain Time\",\n    value: \"America/Denver\",\n  },\n  {\n    label: \"Mountain Time - Chihuahua, Mazatlan\",\n    value: \"America/Mazatlan\",\n  },\n  {\n    label: \"Mountain Time - Edmonton\",\n    value: \"America/Edmonton\",\n  },\n  {\n    label: \"Mountain Time - Yellowknife\",\n    value: \"America/Yellowknife\",\n  },\n  {\n    label: \"America Cancun\",\n    value: \"America/Cancun\",\n  },\n  {\n    label: \"Bogota\",\n    value: \"America/Bogota\",\n  },\n  {\n    label: \"Central Time\",\n    value: \"America/Chicago\",\n  },\n  {\n    label: \"Central Time - Mexico City\",\n    value: \"America/Mexico_City\",\n  },\n  {\n    label: \"Central Time - Winnipeg\",\n    value: \"America/Winnipeg\",\n  },\n  {\n    label: \"Guayaquil\",\n    value: \"America/Guayaquil\",\n  },\n  {\n    label: \"Jamaica\",\n    value: \"America/Jamaica\",\n  },\n  {\n    label: \"Lima\",\n    value: \"America/Lima\",\n  },\n  {\n    label: \"Panama\",\n    value: \"America/Panama\",\n  },\n  {\n    label: \"Rio Branco\",\n    value: \"America/Rio_Branco\",\n  },\n  {\n    label: \"Asuncion\",\n    value: \"America/Asuncion\",\n  },\n  {\n    label: \"Barbados\",\n    value: \"America/Barbados\",\n  },\n  {\n    label: \"Boa Vista\",\n    value: \"America/Boa_Vista\",\n  },\n  {\n    label: \"Campo Grande\",\n    value: \"America/Campo_Grande\",\n  },\n  {\n    label: \"Caracas\",\n    value: \"America/Caracas\",\n  },\n  {\n    label: \"Cuiaba\",\n    value: \"America/Cuiaba\",\n  },\n  {\n    label: \"Curacao\",\n    value: \"America/Curacao\",\n  },\n  {\n    label: \"Detroit\",\n    value: \"America/Detroit\",\n  },\n  {\n    label: \"Eastern Time\",\n    value: \"America/New_York\",\n  },\n  {\n    label: \"Eastern Time - Iqaluit\",\n    value: \"America/Iqaluit\",\n  },\n  {\n    label: \"Eastern Time - Toronto\",\n    value: \"America/Toronto\",\n  },\n  {\n    label: \"Grand Turk\",\n    value: \"America/Grand_Turk\",\n  },\n  {\n    label: \"Guyana\",\n    value: \"America/Guyana\",\n  },\n  {\n    label: \"Havana\",\n    value: \"America/Havana\",\n  },\n  {\n    label: \"La Paz\",\n    value: \"America/La_Paz\",\n  },\n  {\n    label: \"Manaus\",\n    value: \"America/Manaus\",\n  },\n  {\n    label: \"Martinique\",\n    value: \"America/Martinique\",\n  },\n  {\n    label: \"Nassau\",\n    value: \"America/Nassau\",\n  },\n  {\n    label: \"Port of Spain\",\n    value: \"America/Port_of_Spain\",\n  },\n  {\n    label: \"Port-au-Prince\",\n    value: \"America/Port-au-Prince\",\n  },\n  {\n    label: \"Porto Velho\",\n    value: \"America/Porto_Velho\",\n  },\n  {\n    label: \"Puerto Rico\",\n    value: \"America/Puerto_Rico\",\n  },\n  {\n    label: \"Santiago\",\n    value: \"America/Santiago\",\n  },\n  {\n    label: \"Santo Domingo\",\n    value: \"America/Santo_Domingo\",\n  },\n  {\n    label: \"Araguaina\",\n    value: \"America/Araguaina\",\n  },\n  {\n    label: \"Atlantic Time - Halifax\",\n    value: \"America/Halifax\",\n  },\n  {\n    label: \"Belem\",\n    value: \"America/Belem\",\n  },\n  {\n    label: \"Bermuda\",\n    value: \"Atlantic/Bermuda\",\n  },\n  {\n    label: \"Buenos Aires\",\n    value: \"America/Argentina/Buenos_Aires\",\n  },\n  {\n    label: \"Cayenne\",\n    value: \"America/Cayenne\",\n  },\n  {\n    label: \"Cordoba\",\n    value: \"America/Argentina/Cordoba\",\n  },\n  {\n    label: \"Fortaleza\",\n    value: \"America/Fortaleza\",\n  },\n  {\n    label: \"Maceio\",\n    value: \"America/Maceio\",\n  },\n  {\n    label: \"Montevideo\",\n    value: \"America/Montevideo\",\n  },\n  {\n    label: \"Palmer\",\n    value: \"Antarctica/Palmer\",\n  },\n  {\n    label: \"Paramaribo\",\n    value: \"America/Paramaribo\",\n  },\n  {\n    label: \"Punta Arenas\",\n    value: \"America/Punta_Arenas\",\n  },\n  {\n    label: \"Recife\",\n    value: \"America/Recife\",\n  },\n  {\n    label: \"Rothera\",\n    value: \"Antarctica/Rothera\",\n  },\n  {\n    label: \"Salvador\",\n    value: \"America/Bahia\",\n  },\n  {\n    label: \"Sao Paulo\",\n    value: \"America/Sao_Paulo\",\n  },\n  {\n    label: \"Stanley\",\n    value: \"Atlantic/Stanley\",\n  },\n  {\n    label: \"Thule\",\n    value: \"America/Thule\",\n  },\n  {\n    label: \"Newfoundland Time - St. Johns\",\n    value: \"America/St_Johns\",\n  },\n  {\n    label: \"Godthab\",\n    value: \"America/Godthab\",\n  },\n  {\n    label: \"Miquelon\",\n    value: \"America/Miquelon\",\n  },\n  {\n    label: \"Noronha\",\n    value: \"America/Noronha\",\n  },\n  {\n    label: \"South Georgia\",\n    value: \"Atlantic/South_Georgia\",\n  },\n  {\n    label: \"Cape Verde\",\n    value: \"Atlantic/Cape_Verde\",\n  },\n  {\n    label: \"Abidjan\",\n    value: \"Africa/Abidjan\",\n  },\n  {\n    label: \"Accra\",\n    value: \"Africa/Accra\",\n  },\n  {\n    label: \"Azores\",\n    value: \"Atlantic/Azores\",\n  },\n  {\n    label: \"Bissau\",\n    value: \"Africa/Bissau\",\n  },\n  {\n    label: \"Casablanca\",\n    value: \"Africa/Casablanca\",\n  },\n  {\n    label: \"Danmarkshavn\",\n    value: \"America/Danmarkshavn\",\n  },\n  {\n    label: \"El Aaiun\",\n    value: \"Africa/El_Aaiun\",\n  },\n  {\n    label: \"GMT\",\n    value: \"Etc/GMT\",\n  },\n  {\n    label: \"Monrovia\",\n    value: \"Africa/Monrovia\",\n  },\n  {\n    label: \"Reykjavik\",\n    value: \"Atlantic/Reykjavik\",\n  },\n  {\n    label: \"Scoresbysund\",\n    value: \"America/Scoresbysund\",\n  },\n  {\n    label: \"UTC\",\n    value: \"UTC\",\n  },\n  {\n    label: \"Algiers\",\n    value: \"Africa/Algiers\",\n  },\n  {\n    label: \"Canary Islands\",\n    value: \"Atlantic/Canary\",\n  },\n  {\n    label: \"Dublin\",\n    value: \"Europe/Dublin\",\n  },\n  {\n    label: \"Faeroe\",\n    value: \"Atlantic/Faroe\",\n  },\n  {\n    label: \"Lagos\",\n    value: \"Africa/Lagos\",\n  },\n  {\n    label: \"Lisbon\",\n    value: \"Europe/Lisbon\",\n  },\n  {\n    label: \"London\",\n    value: \"Europe/London\",\n  },\n  {\n    label: \"Ndjamena\",\n    value: \"Africa/Ndjamena\",\n  },\n  {\n    label: \"Sao Tome\",\n    value: \"Africa/Sao_Tome\",\n  },\n  {\n    label: \"Tunis\",\n    value: \"Africa/Tunis\",\n  },\n  {\n    label: \"Amsterdam\",\n    value: \"Europe/Amsterdam\",\n  },\n  {\n    label: \"Andorra\",\n    value: \"Europe/Andorra\",\n  },\n  {\n    label: \"Berlin\",\n    value: \"Europe/Berlin\",\n  },\n  {\n    label: \"Brussels\",\n    value: \"Europe/Brussels\",\n  },\n  {\n    label: \"Budapest\",\n    value: \"Europe/Budapest\",\n  },\n  {\n    label: \"Cairo\",\n    value: \"Africa/Cairo\",\n  },\n  {\n    label: \"Central European Time - Belgrade\",\n    value: \"Europe/Belgrade\",\n  },\n  {\n    label: \"Central European Time - Prague\",\n    value: \"Europe/Prague\",\n  },\n  {\n    label: \"Ceuta\",\n    value: \"Africa/Ceuta\",\n  },\n  {\n    label: \"Copenhagen\",\n    value: \"Europe/Copenhagen\",\n  },\n  {\n    label: \"Gibraltar\",\n    value: \"Europe/Gibraltar\",\n  },\n  {\n    label: \"Johannesburg\",\n    value: \"Africa/Johannesburg\",\n  },\n  {\n    label: \"Khartoum\",\n    value: \"Africa/Khartoum\",\n  },\n  {\n    label: \"Luxembourg\",\n    value: \"Europe/Luxembourg\",\n  },\n  {\n    label: \"Madrid\",\n    value: \"Europe/Madrid\",\n  },\n  {\n    label: \"Malta\",\n    value: \"Europe/Malta\",\n  },\n  {\n    label: \"Maputo\",\n    value: \"Africa/Maputo\",\n  },\n  {\n    label: \"Monaco\",\n    value: \"Europe/Monaco\",\n  },\n  {\n    label: \"Moscow-01 - Kaliningrad\",\n    value: \"Europe/Kaliningrad\",\n  },\n  {\n    label: \"Oslo\",\n    value: \"Europe/Oslo\",\n  },\n  {\n    label: \"Paris\",\n    value: \"Europe/Paris\",\n  },\n  {\n    label: \"Rome\",\n    value: \"Europe/Rome\",\n  },\n  {\n    label: \"Stockholm\",\n    value: \"Europe/Stockholm\",\n  },\n  {\n    label: \"Tirane\",\n    value: \"Europe/Tirane\",\n  },\n  {\n    label: \"Tripoli\",\n    value: \"Africa/Tripoli\",\n  },\n  {\n    label: \"Vienna\",\n    value: \"Europe/Vienna\",\n  },\n  {\n    label: \"Warsaw\",\n    value: \"Europe/Warsaw\",\n  },\n  {\n    label: \"Windhoek\",\n    value: \"Africa/Windhoek\",\n  },\n  {\n    label: \"Zurich\",\n    value: \"Europe/Zurich\",\n  },\n  {\n    label: \"Amman\",\n    value: \"Asia/Amman\",\n  },\n  {\n    label: \"Athens\",\n    value: \"Europe/Athens\",\n  },\n  {\n    label: \"Baghdad\",\n    value: \"Asia/Baghdad\",\n  },\n  {\n    label: \"Beirut\",\n    value: \"Asia/Beirut\",\n  },\n  {\n    label: \"Bucharest\",\n    value: \"Europe/Bucharest\",\n  },\n  {\n    label: \"Chisinau\",\n    value: \"Europe/Chisinau\",\n  },\n  {\n    label: \"Damascus\",\n    value: \"Asia/Damascus\",\n  },\n  {\n    label: \"Gaza\",\n    value: \"Asia/Gaza\",\n  },\n  {\n    label: \"Helsinki\",\n    value: \"Europe/Helsinki\",\n  },\n  {\n    label: \"Istanbul\",\n    value: \"Europe/Istanbul\",\n  },\n  {\n    label: \"Jerusalem\",\n    value: \"Asia/Jerusalem\",\n  },\n  {\n    label: \"Kiev\",\n    value: \"Europe/Kiev\",\n  },\n  {\n    label: \"Minsk\",\n    value: \"Europe/Minsk\",\n  },\n  {\n    label: \"Moscow+00 - Moscow\",\n    value: \"Europe/Moscow\",\n  },\n  {\n    label: \"Nairobi\",\n    value: \"Africa/Nairobi\",\n  },\n  {\n    label: \"Nicosia\",\n    value: \"Asia/Nicosia\",\n  },\n  {\n    label: \"Qatar\",\n    value: \"Asia/Qatar\",\n  },\n  {\n    label: \"Riga\",\n    value: \"Europe/Riga\",\n  },\n  {\n    label: \"Riyadh\",\n    value: \"Asia/Riyadh\",\n  },\n  {\n    label: \"Sofia\",\n    value: \"Europe/Sofia\",\n  },\n  {\n    label: \"Syowa\",\n    value: \"Antarctica/Syowa\",\n  },\n  {\n    label: \"Tallinn\",\n    value: \"Europe/Tallinn\",\n  },\n  {\n    label: \"Vilnius\",\n    value: \"Europe/Vilnius\",\n  },\n  {\n    label: \"Baku\",\n    value: \"Asia/Baku\",\n  },\n  {\n    label: \"Dubai\",\n    value: \"Asia/Dubai\",\n  },\n  {\n    label: \"Mahe\",\n    value: \"Indian/Mahe\",\n  },\n  {\n    label: \"Mauritius\",\n    value: \"Indian/Mauritius\",\n  },\n  {\n    label: \"Moscow+01 - Samara\",\n    value: \"Europe/Samara\",\n  },\n  {\n    label: \"Reunion\",\n    value: \"Indian/Reunion\",\n  },\n  {\n    label: \"Tbilisi\",\n    value: \"Asia/Tbilisi\",\n  },\n  {\n    label: \"Yerevan\",\n    value: \"Asia/Yerevan\",\n  },\n  {\n    label: \"Kabul\",\n    value: \"Asia/Kabul\",\n  },\n  {\n    label: \"Tehran\",\n    value: \"Asia/Tehran\",\n  },\n  {\n    label: \"Aqtau\",\n    value: \"Asia/Aqtau\",\n  },\n  {\n    label: \"Aqtobe\",\n    value: \"Asia/Aqtobe\",\n  },\n  {\n    label: \"Ashgabat\",\n    value: \"Asia/Ashgabat\",\n  },\n  {\n    label: \"Dushanbe\",\n    value: \"Asia/Dushanbe\",\n  },\n  {\n    label: \"Karachi\",\n    value: \"Asia/Karachi\",\n  },\n  {\n    label: \"Kerguelen\",\n    value: \"Indian/Kerguelen\",\n  },\n  {\n    label: \"Maldives\",\n    value: \"Indian/Maldives\",\n  },\n  {\n    label: \"Mawson\",\n    value: \"Antarctica/Mawson\",\n  },\n  {\n    label: \"Moscow+02 - Yekaterinburg\",\n    value: \"Asia/Yekaterinburg\",\n  },\n  {\n    label: \"Tashkent\",\n    value: \"Asia/Tashkent\",\n  },\n  {\n    label: \"Colombo\",\n    value: \"Asia/Colombo\",\n  },\n  {\n    label: \"India Standard Time\",\n    value: \"Asia/Calcutta\",\n  },\n  {\n    label: \"Katmandu\",\n    value: \"Asia/Katmandu\",\n  },\n  {\n    label: \"Almaty\",\n    value: \"Asia/Almaty\",\n  },\n  {\n    label: \"Bishkek\",\n    value: \"Asia/Bishkek\",\n  },\n  {\n    label: \"Chagos\",\n    value: \"Indian/Chagos\",\n  },\n  {\n    label: \"Dhaka\",\n    value: \"Asia/Dhaka\",\n  },\n  {\n    label: \"Moscow+03 - Omsk\",\n    value: \"Asia/Omsk\",\n  },\n  {\n    label: \"Thimphu\",\n    value: \"Asia/Thimphu\",\n  },\n  {\n    label: \"Vostok\",\n    value: \"Antarctica/Vostok\",\n  },\n  {\n    label: \"Cocos\",\n    value: \"Indian/Cocos\",\n  },\n  {\n    label: \"Rangoon\",\n    value: \"Asia/Yangon\",\n  },\n  {\n    label: \"Bangkok\",\n    value: \"Asia/Bangkok\",\n  },\n  {\n    label: \"Christmas\",\n    value: \"Indian/Christmas\",\n  },\n  {\n    label: \"Davis\",\n    value: \"Antarctica/Davis\",\n  },\n  {\n    label: \"Hanoi\",\n    value: \"Asia/Saigon\",\n  },\n  {\n    label: \"Hovd\",\n    value: \"Asia/Hovd\",\n  },\n  {\n    label: \"Jakarta\",\n    value: \"Asia/Jakarta\",\n  },\n  {\n    label: \"Moscow+04 - Krasnoyarsk\",\n    value: \"Asia/Krasnoyarsk\",\n  },\n  {\n    label: \"Brunei\",\n    value: \"Asia/Brunei\",\n  },\n  {\n    label: \"Casey\",\n    value: \"Antarctica/Casey\",\n  },\n  {\n    label: \"China Time - Beijing\",\n    value: \"Asia/Shanghai\",\n  },\n  {\n    label: \"Choibalsan\",\n    value: \"Asia/Choibalsan\",\n  },\n  {\n    label: \"Hong Kong\",\n    value: \"Asia/Hong_Kong\",\n  },\n  {\n    label: \"Kuala Lumpur\",\n    value: \"Asia/Kuala_Lumpur\",\n  },\n  {\n    label: \"Macau\",\n    value: \"Asia/Macau\",\n  },\n  {\n    label: \"Makassar\",\n    value: \"Asia/Makassar\",\n  },\n  {\n    label: \"Manila\",\n    value: \"Asia/Manila\",\n  },\n  {\n    label: \"Moscow+05 - Irkutsk\",\n    value: \"Asia/Irkutsk\",\n  },\n  {\n    label: \"Singapore\",\n    value: \"Asia/Singapore\",\n  },\n  {\n    label: \"Taipei\",\n    value: \"Asia/Taipei\",\n  },\n  {\n    label: \"Ulaanbaatar\",\n    value: \"Asia/Ulaanbaatar\",\n  },\n  {\n    label: \"Western Time - Perth\",\n    value: \"Australia/Perth\",\n  },\n  {\n    label: \"Dili\",\n    value: \"Asia/Dili\",\n  },\n  {\n    label: \"Jayapura\",\n    value: \"Asia/Jayapura\",\n  },\n  {\n    label: \"Moscow+06 - Yakutsk\",\n    value: \"Asia/Yakutsk\",\n  },\n  {\n    label: \"Palau\",\n    value: \"Pacific/Palau\",\n  },\n  {\n    label: \"Pyongyang\",\n    value: \"Asia/Pyongyang\",\n  },\n  {\n    label: \"Seoul\",\n    value: \"Asia/Seoul\",\n  },\n  {\n    label: \"Tokyo\",\n    value: \"Asia/Tokyo\",\n  },\n  {\n    label: \"Central Time - Adelaide\",\n    value: \"Australia/Adelaide\",\n  },\n  {\n    label: \"Central Time - Darwin\",\n    value: \"Australia/Darwin\",\n  },\n  {\n    label: \"Dumont D'Urville\",\n    value: \"Antarctica/DumontDUrville\",\n  },\n  {\n    label: \"Eastern Time - Brisbane\",\n    value: \"Australia/Brisbane\",\n  },\n  {\n    label: \"Eastern Time - Hobart\",\n    value: \"Australia/Hobart\",\n  },\n  {\n    label: \"Eastern Time - Melbourne\",\n    value: \"Australia/Melbourne\",\n  },\n  {\n    label: \"Eastern Time - Melbourne, Sydney\",\n    value: \"Australia/Sydney\",\n  },\n  {\n    label: \"Guam\",\n    value: \"Pacific/Guam\",\n  },\n  {\n    label: \"Moscow+07 - Vladivostok\",\n    value: \"Asia/Vladivostok\",\n  },\n  {\n    label: \"Port Moresby\",\n    value: \"Pacific/Port_Moresby\",\n  },\n  {\n    label: \"Truk\",\n    value: \"Pacific/Chuuk\",\n  },\n  {\n    label: \"Efate\",\n    value: \"Pacific/Efate\",\n  },\n  {\n    label: \"Guadalcanal\",\n    value: \"Pacific/Guadalcanal\",\n  },\n  {\n    label: \"Kosrae\",\n    value: \"Pacific/Kosrae\",\n  },\n  {\n    label: \"Moscow+08 - Magadan\",\n    value: \"Asia/Magadan\",\n  },\n  {\n    label: \"Norfolk\",\n    value: \"Pacific/Norfolk\",\n  },\n  {\n    label: \"Noumea\",\n    value: \"Pacific/Noumea\",\n  },\n  {\n    label: \"Ponape\",\n    value: \"Pacific/Pohnpei\",\n  },\n  {\n    label: \"Auckland\",\n    value: \"Pacific/Auckland\",\n  },\n  {\n    label: \"Fiji\",\n    value: \"Pacific/Fiji\",\n  },\n  {\n    label: \"Funafuti\",\n    value: \"Pacific/Funafuti\",\n  },\n  {\n    label: \"Kwajalein\",\n    value: \"Pacific/Kwajalein\",\n  },\n  {\n    label: \"Majuro\",\n    value: \"Pacific/Majuro\",\n  },\n  {\n    label: \"Moscow+09 - Petropavlovsk-Kamchatskiy\",\n    value: \"Asia/Kamchatka\",\n  },\n  {\n    label: \"Nauru\",\n    value: \"Pacific/Nauru\",\n  },\n  {\n    label: \"Tarawa\",\n    value: \"Pacific/Tarawa\",\n  },\n  {\n    label: \"Wake\",\n    value: \"Pacific/Wake\",\n  },\n  {\n    label: \"Wallis\",\n    value: \"Pacific/Wallis\",\n  },\n  {\n    label: \"Apia\",\n    value: \"Pacific/Apia\",\n  },\n  {\n    label: \"Enderbury\",\n    value: \"Pacific/Enderbury\",\n  },\n  {\n    label: \"Fakaofo\",\n    value: \"Pacific/Fakaofo\",\n  },\n  {\n    label: \"Tongatapu\",\n    value: \"Pacific/Tongatapu\",\n  },\n  {\n    label: \"Kiritimati\",\n    value: \"Pacific/Kiritimati\",\n  },\n];\n","import React, { useState } from \"react\";\n\nimport AnalogClock from \"../AnalogClock\";\nimport Clock from \"../Clock\";\n\nimport Dropdown from \"../Dropdown\";\nimport { timezones } from \"../../constants\";\n\nimport \"./App.css\";\n\nexport default () => {\n  const [timezone, setTimezone] = useState({\n    label: \"London\",\n    value: \"Europe/London\",\n  });\n\n  return (\n    <div className=\"App\">\n      <Clock timezone={timezone} />\n      <AnalogClock timezone={timezone} />\n      <Dropdown\n        items={timezones}\n        initialValue={timezone}\n        handleSelected={setTimezone}\n      />\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./utils/serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}